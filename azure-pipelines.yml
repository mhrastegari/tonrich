trigger:
- main

jobs:

- job: build_blazor_api_wasm
  displayName: 'build blazor api + web assembly'

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: UseDotNet@2
    displayName: 'Setup .NET'
    inputs:
      version: 7.x

  - task: UseDotNet@2
    displayName: 'Use dotnet sdk 6.x for LibSassBuilder'
    inputs:
      version: 6.x

  - task: Bash@3
    displayName: 'Switch to blazor web assembly'
    inputs:
      targetType: 'inline'
      script: sed -i 's/Microsoft.NET.Sdk.Web/Microsoft.NET.Sdk.BlazorWebAssembly/g' src/Client/Web/Tonrich.Client.Web.csproj

  - task: Bash@3
    displayName: 'Restore workloads'
    inputs:
      targetType: 'inline'
      script: 'dotnet workload restore src/Client/Web/Tonrich.Client.Web.csproj -p:BlazorMode=BlazorWebAssembly'


  - task: Bash@3
    displayName: 'Install wasm-tools'
    inputs:
      targetType: 'inline'
      script: dotnet workload install wasm-tools

  - task: FileTransform@1
    displayName: Update appsettings.json
    inputs:
      fileType: 'json'
      folderPath: './'
      targetFiles: 'src/Client/Shared/appsettings.json'

  - task: Bash@3
    displayName: 'Build (To generate CSS/JS files)'
    inputs:
      targetType: 'inline'
      script: 'dotnet build src/Client/Web/Tonrich.Client.Web.csproj -p:Configuration=Release -p:BlazorMode=BlazorWebAssembly -p:WebAppDeploymentType="${{ variables.WEB_APP_DEPLOYMENT_TYPE }}"'

  - task: Bash@3
    displayName: 'Publish'
    inputs:
      targetType: 'inline'
      script: 'dotnet publish src/Server/Api/Tonrich.Server.Api.csproj -p:BlazorMode=BlazorWebAssembly -p:WebAppDeploymentType="${{ variables.WEB_APP_DEPLOYMENT_TYPE }}" -p:Configuration=Release --self-contained -r linux-x64 -o api-web'

  - task: PublishPipelineArtifact@1
    displayName: Upload api-web artifact
    inputs:
      targetPath: 'api-web'
      artifact: 'api-web-bundle'
      publishLocation: 'pipeline'
  



